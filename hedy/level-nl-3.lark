%import common.NUMBER -> NUMBER
%import common.SIGNED_INT -> INT
_SPACE: " "+

_COMMA: _SPACE? ("," | "،") _SPACE?

start: program

program: _EOL* (command _EOL+)* command?

echo: "echo" (_SPACE text)?

error_invalid_space: _SPACE text?

error_invalid: textwithoutspaces text?

comment: "#" /([^\n]+)/

_EOL: "\r"? "\n"

NAME: ID_START ID_CONTINUE*

ID_START: /[\p{Lu}\p{Ll}\p{Lt}\p{Lm}\p{Lo}\p{Nl}_]+/

ID_CONTINUE: ID_START
  | /[\p{Mn}\p{Mc}\p{Nd}\p{Pc}·]+/

_END_BLOCK: "end-block"

print: "print" (_SPACE text)?
  | "print" (_SPACE _print_argument)?

ask: "vraag" _SPACE
  | var _SPACE "is" _SPACE "vraag" _SPACE

error_ask_dep_2: "ask" (_SPACE error_text_dep_2)?

error_echo_dep_2: "echo" (_SPACE error_text_dep_2)?

error_text_dep_2: /([^\n]+)/ -> text

sleep: ("slaap" | "sleep") _SPACE

textwithoutspaces: /([^\n *+-\/]+)/ -> text
  | /([^\r\n!?. ]+)/ -> text

text: /([^\n]+)/ -> text
  | /([^\r\n,!?،.]+)/ -> text

text_ask: /([^\r\n!?.]+)/ -> text

punctuation: PUNCTUATION -> punctuation

PUNCTUATION: "!"
  | "?"
  | "."

var: NAME -> var

command: print
  | ask
  | echo
  | turtle
  | error_invalid_space
  | comment
  | error_invalid
  | assign
  | error_ask_dep_2
  | error_echo_dep_2
  | sleep
  | assign_list
  | add
  | remove

_print_argument: (_SPACE | textwithoutspaces | punctuation)*
  | (_SPACE | list_access | textwithoutspaces | punctuation)*

assign: var _SPACE "is" _SPACE text -> assign
  | var _SPACE "is" _SPACE (list_access | text) -> assign

assign_list: var _SPACE "is" _SPACE text_list (_COMMA text_list)+

text_list: /([^\r\n,،]+)/ -> text

random: ("willekeurig" | "random")

list_access: var _SPACE "op" _SPACE INT -> list_access

turtle: ("vooruit" | "forward") _SPACE -> forward
  | ("vooruit" | "forward") _SPACE -> turn
  | "forward" (_SPACE (INT | textwithoutspaces))? -> forward
  | "turn" (_SPACE (textwithoutspaces))? -> turn
  | "forward" (_SPACE (INT | list_access | textwithoutspaces))? -> forward
  | "turn" (_SPACE (list_access | textwithoutspaces))? -> turn

some_spaces: /([^\r\n!?. ]+)/ (_SPACE /([^\r\n!?. ]+)/)* -> text_with_spaces

add: ("voeg" | "add") _SPACE some_spaces _SPACE ("toe aan" | "to") _SPACE var

remove: ("verwijder" | "remove") _SPACE some_spaces _SPACE ("uit" | "from") _SPACE var
